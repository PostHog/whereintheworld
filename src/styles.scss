@use 'sass:math';
@import '_vars';
@import 'fonts';
@import '../node_modules/@wojtekmaj/react-daterange-picker/dist/DateRangePicker.css';
@import '../node_modules/react-calendar/dist/Calendar.css';
@import '../node_modules/rc-slider/assets/index.css';

// Root styles
:root {
    --primary: #{$primary};
    --secondary: #{$secondary};
    --orange: #{$orange};
    --danger: #{$danger};
    --text-default: #{$text_default};
    --text-muted: #{$text_muted};
    --text-muted-light: #{$text_muted_light};
}

// Reset styles
html {
    box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
}

html,
body {
    margin: 0;
    padding: 0;
    font-size: 16px;
    font-family: $font_family;
    background: $bg;
    height: 100%;
    color: $text_default;
}

h1 {
    font-size: 1.6em;
}

h2 {
    font-size: 1.1em;
    color: $text_muted_light;
}

input,
textarea {
    font-size: 16px;
}

button {
    cursor: pointer;
}

// General styles
.main-layout {
    height: calc(100vh - 42px); // height of top bar
    width: 100%;

    .scene:not(.home-scene) {
        padding: $default_spacing $default_spacing * 2;
    }
}

.flex-center {
    display: flex;
    align-items: center;
}

.mt {
    margin-top: $default_spacing;
}

.mb {
    margin-bottom: $default_spacing;
}

.text-right {
    text-align: right;
}

.text-center {
    text-align: center;
}

.text-muted {
    color: $text_muted;
}

.text-muted-light {
    color: $text_muted_light;
}

.text-danger {
    color: $danger;
}

a {
    color: $primary;
    text-decoration: none;
}

.cursor-pointer {
    cursor: pointer;
}

// Card styles
.card {
    @extend .mixin-elevated;
    border-radius: $radius;
    background-color: $bg_alt;
    padding: $default_spacing;
}

// Button styles
.btn {
    @extend .mixin-elevated;
    border-radius: $radius;
    background-color: $primary;
    color: white;
    font-weight: bold;
    border: 0;
    padding: 5px 10px;
    transition: all 0.3s ease-out;
    border: 2px solid $primary;

    &:hover {
        background-color: lighten($primary, 10%);
        border-color: lighten($primary, 10%);
    }

    &.inverse {
        background-color: white;
        color: $primary;

        &:hover {
            border-color: white;
            background-color: $primary;
            color: white;
        }
    }

    &:disabled {
        cursor: not-allowed;
        background-color: lighten($primary, 10%);
        border-color: lighten($primary, 10%);
    }

    &.link {
        background-color: transparent;
        color: $primary;
        border-color: transparent;
        font-weight: normal;
        padding-left: 0;
    }

    &.sm {
        padding: 3px 8px;
    }

    &.lg {
        padding: 8px 16px;
        font-size: 1rem;
    }

    &.block {
        width: 100%;
    }
}

// Form styles

.form-group {
    margin-bottom: $default_spacing;
    label {
        font-size: 0.85em;
        display: block;
        font-weight: bold;
        padding-bottom: math.div($default_spacing, 2);
    }
    .help-text {
        padding-top: 4px;
        font-size: 0.75em;
    }
}

// Date range picker

.react-daterange-picker {
    width: 100%;
    .react-daterange-picker__wrapper {
        border-radius: $radius;
        padding: 8px;
        font-size: 0.85em;
    }
    .react-daterange-picker__inputGroup__month {
        width: 44px;
    }

    .react-daterange-picker__inputGroup {
        color: white;
        input,
        select {
            color: white;
        }
    }

    .react-daterange-picker__range-divider {
        flex-grow: 1;
        display: flex;
    }

    &.errored {
        .react-daterange-picker__wrapper {
            border-color: $danger;
        }
    }
}

.react-calendar {
    @extend .mixin-elevated;
    margin-top: $default_spacing * 0.5;
    border-radius: $radius;
    background-color: $bg_elevated;

    .react-calendar__navigation__arrow,
    .react-calendar__navigation__label {
        color: $text_default;
    }

    .react-calendar__tile {
        border-radius: $radius;
        color: $text_default;

        &.react-calendar__tile--active {
            border-radius: 0;
            background-color: $primary;
            color: $text_default;
        }

        &.react-calendar__tile:hover {
            border-radius: $radius;
            background-color: lighten($bg_alt, 12%);
        }

        &.react-calendar__tile--hover {
            border-radius: 0;
            background-color: lighten($bg_alt, 12%);
        }

        &.react-calendar__tile--rangeStart {
            border-top-left-radius: $radius;
            border-bottom-left-radius: $radius;
        }

        &.react-calendar__tile--rangeEnd {
            border-top-right-radius: $radius;
            border-bottom-right-radius: $radius;
        }

        &.react-calendar__month-view__days__day--weekend {
            color: rgba($text_default, 0.6);
        }

        &.react-calendar__tile--now {
            background-color: lighten($secondary, 10%);
            color: #000;
            &:hover {
                background-color: lighten($secondary, 10%);
            }
        }
    }
}

// Select (react-select overrides)
.react-select__control {
    @extend .mixin-elevated;
    font-size: 0.85em;
    background-color: $bg_input !important;
    border: 0 !important;

    .react-select__placeholder {
        color: $text_muted;
    }

    .react-select__single-value {
        color: $text_default !important;
    }

    &.react-select__control--is-focused {
        box-shadow: none !important;
    }

    .react-select__clear-indicator {
        color: $text_muted;
        cursor: pointer;
    }

    .react-select__indicator-separator {
        background-color: $border;
    }

    .react-select__input {
        color: $text_default !important;
    }
}

.react-select__menu {
    background-color: $bg_elevated !important;

    .react-select__option {
        background-color: unset !important;
        cursor: pointer;
        &:hover {
            background-color: lighten($bg_elevated, 10%) !important;
        }
    }
}
.react-select__errored {
    .react-select__control {
        border-color: $danger !important;
    }
}
